--// SETTINGS
local TOOL_NAME = "Glove"
local REMOTE_NAME = "Event"
local FLOAT_SPEED = Vector3.new(0, -2.9999, 0) -- Float strength
local INTERVAL = 0.1 -- Slash interval
local RESET_COOLDOWN_FR = 5 -- Cooldown in seconds for -fr command resets
local RESET_COOLDOWN_VICTIM = 5 -- Cooldown in seconds for victim death resets

--// SERVICES
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

--// STATE
local floatTargets = {} -- [UserId] = true
local deathConnections = {} -- [UserId] = Connection
local lastResetTime = 0 -- Tracks last reset time for cooldown

--// HELPER FUNCTIONS
local function warn(msg)
    print("[Glove] " .. msg)
end

local function getToolRemote()
    local tool = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild(TOOL_NAME)
        or LocalPlayer.Backpack:FindFirstChild(TOOL_NAME)
    if not tool then
        warn("Tool not found in character or backpack")
        return nil, nil
    end

    local remote = tool:FindFirstChild(REMOTE_NAME)
    if not remote then
        warn("Remote not found in tool")
        return tool, nil
    end

    return tool, remote
end

--// FORCE SELF RESET WITH COOLDOWN
local function forceSelfReset(cooldownType)
    local cooldown = cooldownType == "victim" and RESET_COOLDOWN_VICTIM or RESET_COOLDOWN_FR
    local currentTime = tick()
    if currentTime - lastResetTime < cooldown then
        warn("Reset on cooldown (" .. cooldown .. "s), waiting...")
        return false
    end

    local character = LocalPlayer.Character
    if character then
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid:ChangeState(Enum.HumanoidStateType.Dead) -- Try setting state to Dead
            humanoid.Health = 0 -- Fallback to ensure reset
            lastResetTime = currentTime -- Update last reset time
            warn("Self reset triggered (cooldown: " .. cooldown .. "s)")
            return true
        end
    end
    return false
end

--// VICTIM TRACKING
local function trackVictim(victim)
    if deathConnections[victim.UserId] then return end

    local function setupDeathTracking(char)
        local humanoid = char and char:FindFirstChildOfClass("Humanoid")
        if humanoid then
            deathConnections[victim.UserId] = humanoid.Died:Connect(function()
                forceSelfReset("victim") -- Kill yourself when victim dies, using 4/5s cooldown
            end)
        end
    end

    -- Track current character
    if victim.Character then
        setupDeathTracking(victim.Character)
    end

    -- Reconnect when victim respawns
    victim.CharacterAdded:Connect(function(newChar)
        if floatTargets[victim.UserId] then
            local newHumanoid = newChar:WaitForChild("Humanoid")
            setupDeathTracking(newChar)
            -- Reapply float to new character
            task.spawn(function()
                task.wait(4) -- Wait for character to fully load
                if floatTargets[victim.UserId] and newChar:FindFirstChild("HumanoidRootPart") then
                    applyFloat(victim)
                end
            end)
        end
    end)
end

--// FLOAT APPLICATION
local function applyFloat(victim)
    local _, remote = getToolRemote()
    if remote and victim.Character then
        remote:FireServer("slash", victim.Character, FLOAT_SPEED)
        warn("Applied float to " .. victim.Name)
    else
        warn("Failed to apply float to " .. victim.Name .. ": Remote or Character missing")
    end
end

--// COMMAND PROCESSOR
local function processCommand(msg)
    local args = string.split(msg:lower(), " ")

    if args[1] == "-fr" and args[2] then
        local search = args[2]
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= LocalPlayer then
                local nameMatch = string.find(player.Name:lower(), search, 1, true)
                local displayMatch = player.DisplayName and string.find(player.DisplayName:lower(), search, 1, true)

                if nameMatch or displayMatch then
                    floatTargets[player.UserId] = true
                    forceSelfReset("fr") -- Reset yourself immediately after targeting, using 1s cooldown
                    trackVictim(player)

                    -- Start float loop
                    task.spawn(function()
                        while floatTargets[player.UserId] do
                            if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                                applyFloat(player)
                            end
                            task.wait(INTERVAL)
                        end
                    end)

                    warn("Floating player: " .. player.Name)
                end
            end
        end

    elseif args[1] == "-unfr" and args[2] then
        local search = args[2]
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= LocalPlayer then
                local nameMatch = string.find(player.Name:lower(), search, 1, true)
                local displayMatch = player.DisplayName and string.find(player.DisplayName:lower(), search, 1, true)

                if nameMatch or displayMatch then
                    floatTargets[player.UserId] = nil
                    if deathConnections[player.UserId] then
                        deathConnections[player.UserId]:Disconnect()
                        deathConnections[player.UserId] = nil
                    end
                    warn("Stopped floating player: " .. player.Name)
                end
            end
        end
    end
end

--// TRACK LOCAL PLAYER RESPAWN
LocalPlayer.CharacterAdded:Connect(function()
    task.wait(4) -- Wait for character to load
    for userId, _ in pairs(floatTargets) do
        local player = Players:GetPlayerByUserId(userId)
        if player and player.Character then
            -- Reapply float to victims
            task.spawn(function()
                if floatTargets[userId] and player.Character:FindFirstChild("HumanoidRootPart") then
                    applyFloat(player)
                end
            end)
        end
    end
end)

--// INITIALIZE
LocalPlayer.Chatted:Connect(processCommand)

warn("Glove float script initialized. Commands:")
warn("-fr [name] - Start floating player (resets self with 1s cooldown)")
warn("-unfr [name] - Stop floating player")
warn("Victim death resets use 4s cooldown")